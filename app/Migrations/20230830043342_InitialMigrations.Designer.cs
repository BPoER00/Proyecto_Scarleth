// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using app.Models;

#nullable disable

namespace app.Migrations
{
    [DbContext(typeof(ConexionContext))]
    [Migration("20230830043342_InitialMigrations")]
    partial class InitialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("app.Models.Asignacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("cargo_id")
                        .HasColumnType("int");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<string>("numero_colegiado")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("persona_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("cargo_id");

                    b.HasIndex("persona_id");

                    b.ToTable("Asignacions");
                });

            modelBuilder.Entity("app.Models.Cargo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.HasKey("id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("app.Models.Detalle_Vacuna", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("cantidad")
                        .HasColumnType("bigint");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.Property<DateTime>("fecha_vencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("usuario_id")
                        .HasColumnType("int");

                    b.Property<int>("vacuna_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("usuario_id");

                    b.HasIndex("vacuna_id");

                    b.ToTable("Detalle_Vacunas");
                });

            modelBuilder.Entity("app.Models.Detalle_Vacunacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("asignacion_id")
                        .HasColumnType("int");

                    b.Property<int>("dosis")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_vacunacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("vacunacion_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("asignacion_id");

                    b.HasIndex("vacunacion_id");

                    b.ToTable("Detalle_Vacunacions");
                });

            modelBuilder.Entity("app.Models.Direccion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.HasKey("id");

                    b.ToTable("Direccions");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(2567),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Gualan"
                        },
                        new
                        {
                            id = 2,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(2605),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "La Union"
                        },
                        new
                        {
                            id = 3,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(2647),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Zacapa"
                        },
                        new
                        {
                            id = 4,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(2693),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Rio Hondo"
                        },
                        new
                        {
                            id = 5,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(2732),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Estanzuela"
                        },
                        new
                        {
                            id = 6,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(2775),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Teculutan"
                        },
                        new
                        {
                            id = 7,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(2813),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Usumatlan"
                        },
                        new
                        {
                            id = 8,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(2851),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Huite"
                        },
                        new
                        {
                            id = 9,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(2894),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Cabañas"
                        },
                        new
                        {
                            id = 10,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(2931),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "San Diego"
                        });
                });

            modelBuilder.Entity("app.Models.Genero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.HasKey("id");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(3265),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Masculino"
                        },
                        new
                        {
                            id = 2,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(3307),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Femenino"
                        });
                });

            modelBuilder.Entity("app.Models.Persona", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("cui")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("direccion_id")
                        .HasColumnType("int");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("genero_id")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("id");

                    b.HasIndex("direccion_id");

                    b.HasIndex("genero_id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("app.Models.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.HasKey("id");

                    b.ToTable("Rols");

                    b.HasData(
                        new
                        {
                            id = 1,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(3402),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Administrador"
                        },
                        new
                        {
                            id = 2,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(3440),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Digitador"
                        },
                        new
                        {
                            id = 3,
                            CreateAt = new DateTime(2023, 8, 29, 22, 33, 41, 835, DateTimeKind.Local).AddTicks(3484),
                            DeleteAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdateAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            estado = 1,
                            nombre = "Usuario Comun"
                        });
                });

            modelBuilder.Entity("app.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<string>("nombre_usuario")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("persona_id")
                        .HasColumnType("int");

                    b.Property<int>("rol_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("persona_id");

                    b.HasIndex("rol_id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("app.Models.Vacuna", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("cubre")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.Property<long>("unidades")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.ToTable("Vacunas");
                });

            modelBuilder.Entity("app.Models.Vacunacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasMaxLength(85)
                        .HasColumnType("nvarchar(85)");

                    b.Property<long>("dosis")
                        .HasColumnType("bigint");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<int?>("paciente_id")
                        .HasColumnType("int");

                    b.Property<int>("persona_id")
                        .HasColumnType("int");

                    b.Property<int>("vacuna_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("paciente_id");

                    b.HasIndex("vacuna_id");

                    b.ToTable("Vacunacions");
                });

            modelBuilder.Entity("app.Models.Asignacion", b =>
                {
                    b.HasOne("app.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("cargo_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("persona_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cargo");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("app.Models.Detalle_Vacuna", b =>
                {
                    b.HasOne("app.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Models.Vacuna", "Vacuna")
                        .WithMany()
                        .HasForeignKey("vacuna_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Vacuna");
                });

            modelBuilder.Entity("app.Models.Detalle_Vacunacion", b =>
                {
                    b.HasOne("app.Models.Asignacion", "Asignacion")
                        .WithMany()
                        .HasForeignKey("asignacion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Models.Vacunacion", "Vacunacion")
                        .WithMany()
                        .HasForeignKey("vacunacion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asignacion");

                    b.Navigation("Vacunacion");
                });

            modelBuilder.Entity("app.Models.Persona", b =>
                {
                    b.HasOne("app.Models.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("direccion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Models.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("genero_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direccion");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("app.Models.Usuario", b =>
                {
                    b.HasOne("app.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("persona_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("app.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("app.Models.Vacunacion", b =>
                {
                    b.HasOne("app.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("paciente_id");

                    b.HasOne("app.Models.Vacuna", "Vacuna")
                        .WithMany()
                        .HasForeignKey("vacuna_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("Vacuna");
                });
#pragma warning restore 612, 618
        }
    }
}
